name: Makefile CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # Step 3: Install BLAS and LAPACK Libraries
      - name: Install BLAS & LAPACK
        run: |
          sudo apt-get update
          sudo apt-get install -y libblas-dev liblapack-dev gfortran

      # Step 4: Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 5: Set up Virtual Environment
      - name: Set up Virtual Environment
        run: |
          make venv

      # Step 6: Clear Pip Cache
      - name: Clear Pip Cache
        run: make clear-cache

      # Step 7: Install Dependencies and Formatters
      - name: Install Dependencies
        run: make install install-formatters install-quantcrypt

      # Step 8: Lint the Codebase
      - name: Lint the Codebase
        run: make lint

      # Step 9: Format the Codebase
      - name: Format the Codebase
        run: make format

      # Step 10: Run Tests
      - name: Run Tests
        run: make test

      # Step 11: Generate Coverage Report
      - name: Generate Coverage Report
        run: make coverage

      # Step 12: Upload Coverage Report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_html

      # Step 13: Generate Documentation
      - name: Generate Documentation
        run: make docs

      # Step 14: Upload Documentation (Optional)
      - name: Upload Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/html  # Assuming Doxygen outputs to docs/html

      # Step 15: Final Cleanup
      - name: Clean Up
        run: make clean clean-venv